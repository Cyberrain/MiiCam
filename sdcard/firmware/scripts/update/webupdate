#!/bin/sh

PATH="/tmp/sd/firmware/scripts/update:$PATH"
WEBSITETGZ="/tmp/website.tgz"
WEBSITEDIR="/tmp/sd/firmware/www"


log() { echo "ERROR: ${*}" > /dev/stderr; }

die() { log "${*}"; exit 1; }


download()
{
    local WEBSITE_URL="$( curl -s https://api.github.com/repos/miicam/miicamweb/releases/latest | jq '.assets | to_entries[] | .value.browser_download_url' )"

    if [ "x$WEBSITE_URL" == "x" ]
    then
        echo "Website url not found! Exiting build"
        return 1
    fi

    wget -q -t 5 -T 10 -c -O "$WEBSITETGZ" "$WEBSITE_URL"

    return $?
}


main()
{
    ## Get versions of current and latest
    local LATEST_VERSION="$(  webversion --latest  )" || die "Failed to retrieve the tag of the latest version"
    local CURRENT_VERSION="$( webversion --current )" || die "Failed to retrieve the tag of the current version"

    ## Download if a newer version is available
    if [ "$LATEST_VERSION" -gt "$CURRENT_VERSION" ] ;
    then
        echo "*** Downloading latest webui release"
        download || die "Failed to download the latest web ui"
    fi

    ## Create the new webdir
    test -d "${WEBSITEDIR}.new" || mkdir "${WEBSITEDIR}.new"

    ## Remove the backup dest dir
    test -d "${WEBSITEDIR}.old" && rm -rf "${WEBSITEDIR}.old"

    ## Unpack the tarbal
    if [ -f "$WEBSITETGZ" ]
    then
        echo "*** Unpacking $WEBSITETGZ"
        tar xzf "$WEBSITETGZ" -C "/tmp/sd/${WEBSITEDIR}.new" || die "Failed to unpack $WEBSITETGZ"
    fi

   if [ -f "${WEBSITEDIR}.new/public/api/index.php" ]
   then
       echo "*** Swapping newer web ui version with the current one"
       mv "${WEBSITEDIR}" "${WEBSITEDIR}.old" && \
       mv "${WEBSITEDIR}.new" "${WEBSITEDIR}" && \
       echo "*** Update completed"

   fi
}

main
