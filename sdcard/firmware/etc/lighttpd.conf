
## The port to listen on (use 80 for http, 443 for https)
server.port = 80

## The pid file
server.pid-file = "/var/run/lighttpd.pid"

## The document root of the webserver
server.document-root = "/tmp/sd/firmware/www/public"

## Temporary file storage
server.upload-dirs = (
    "/tmp/sd/firmware/tmp/"
)

## Write errors to log file
server.errorlog = "/tmp/sd/log/lighttpd.log"

## Enable modules
server.modules = (
    "mod_access",
    "mod_alias",
    "mod_auth",
    "mod_cgi",
    "mod_dirlisting",
    "mod_expire",
    "mod_redirect",
    "mod_rewrite",
    "mod_setenv"
)

## Setup basic authentication
auth.backend = "plain"
auth.backend.plain.userfile= "/etc/lighttpd.user"
auth.require = ( "/" => (
    "method"  => "basic",
    "realm"   => "Restricted!",
    "require" => "valid-user"),
)

## Rewrite to file
url.rewrite-if-not-file = (
        "^/.*\.(jpg|php|jpeg|gif|png|swf|avi|mpg|mpeg|mp3|flv|ico|css)$" => "$0",
        "^/api/(.*)" => "/api/index.php",
        "(.*)" => "/index.html"
)

## Deny access to a few urls
$HTTP["url"] =~ "^/(\.|vendor|app|composer.json|composer.lock)($|/)" {
     url.access-deny = ("")
}

## Limit connections to 6
server.max-connections = 6
server.max-worker = 1
max-procs = 3

## Caching for static content
$HTTP["url"] =~ "^/static/(css|js)" {
    expire.url = ("" => "access plus 1 months" )
}

## Create aliases for our video and images directories
alias.url = (
    "/videos/"    => "/tmp/sd/RECORDED_VIDEOS/",
    "/snapshots/" => "/tmp/sd/RECORDED_IMAGES/",
)

## Don't serve these files as static content
static-file.exclude-extensions = (
    ".fcgi",
    ".php",
    ".rb",
    ".inc",
    ".tmp",
    ".bak",
    ".conf",
    ".cfg",
    "~",
)

## Index files
index-file.names = (
    "index.html",
    "index.htm",
    "index.php",
)

## Set interpreters for cgi scripts
cgi.assign = (
    ".cgi" => "/bin/sh",
    ".php" => "/tmp/sd/firmware/bin/arm-php-cgi"
)

## Configure mime types
mimetype.assign = (
    ".html" => "text/html",
    ".htm"  => "text/html",
    ".txt"  => "text/plain",
    ".log"  => "text/plain",
    ".css"  => "text/css",
    ".mp4"  => "video/mp4",
    ".jpg"  => "image/jpeg",
    ".jpeg" => "image/jpeg",
    ".gif"  => "image/gif",
    ".png"  => "image/png"
)

## Set headers when https is configured
$HTTP["scheme"] == "https" {
    setenv.add-response-header = ("Strict-Transport-Security" => "max-age=31536000; includeSubDomains")
}

## Set cors headers
setenv.add-response-header = (
    "Access-Control-Allow-Origin"  => "*",
    "Access-Control-Allow-Headers" => "accept, origin, authorization, content-type, x-requested-with",
    "Access-Control-Allow-Methods" => "GET, POST, OPTIONS",
)

